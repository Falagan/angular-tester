!function(n,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/common"),require("@fortawesome/angular-fontawesome"),require("@angular/router"),require("@fortawesome/fontawesome-svg-core"),require("@fortawesome/free-solid-svg-icons"),require("@angular/forms")):"function"==typeof define&&define.amd?define("ui",["exports","@angular/core","@angular/common","@fortawesome/angular-fontawesome","@angular/router","@fortawesome/fontawesome-svg-core","@fortawesome/free-solid-svg-icons","@angular/forms"],o):o((n=n||self).ui={},n.ng.core,n.ng.common,n.angularFontawesome,n.ng.router,n.fontawesomeSvgCore,n.freeSolidSvgIcons,n.ng.forms)}(this,function(n,o,e,r,t,a,i,s){"use strict";var l=function(){function n(){this.open=!1}return n.prototype.openClose=function(){this.open=!this.open},n.decorators=[{type:o.Component,args:[{selector:"app-aside-menu",template:'\x3c!-- Aside Menu --\x3e\r\n<ng-container \r\n  *ngTemplateOutlet="open ? menuOpen: menuClose">\r\n</ng-container>\r\n\x3c!-- Menu Replegado --\x3e\r\n<ng-template #menuClose>\r\n  <aside class="aside-menu h-100 shadow">\r\n    <ul class="nav flex-column closed-menu text-center h-100">\r\n      <li class="nav-item mb-3">\r\n        <span (click)="openClose()" class="has-pointer nav-item">\r\n          <fa-icon [icon]="[\'fa\', \'bars\']" size="1x"></fa-icon>\r\n        </span>\r\n      </li>\r\n      <ng-container *ngFor="let item of data.routes">\r\n        <li class="nav-item" [routerLink]="[item.route]">\r\n          <fa-icon [icon]="[\'fa\', item.faIcon]"></fa-icon>\r\n        </li>\r\n      </ng-container>\r\n    </ul>\r\n  </aside>\r\n</ng-template>\r\n\x3c!--Menu Desplegado--\x3e\r\n<ng-template #menuOpen>\r\n  <aside class="aside-menu shadow">\r\n    <ul class="nav flex-column opened-menu p-2 text-white">\r\n      <li class="nav-item">\r\n        <span (click)="openClose()" class="has-pointer">\r\n          <fa-icon\r\n            [icon]="[\'fa\', \'arrow-left\']"\r\n            size="1x"\r\n            pull="right"\r\n          ></fa-icon>\r\n        </span>\r\n      </li>\r\n      <ng-container *ngFor="let item of data.routes">\r\n           <li [routerLink]="[item.route]" class="nav-item">\r\n        <p class="m-0">\r\n          <fa-icon\r\n            [icon]="[\'fa\', item.faIcon]"\r\n            size="1x"\r\n            class="pr-2"\r\n          ></fa-icon\r\n          >{{ item.text }}\r\n        </p>\r\n      </li>\r\n      </ng-container>\r\n    </ul>\r\n  </aside>\r\n</ng-template>\r\n',styles:[".aside-menu{background-color:#cd6155;height:100%;width:auto;position:fixed;z-index:1;left:0;overflow-x:hidden}.closed-menu{width:35px}.opened-menu{width:150px}ul>li{padding:5px}ul>li>p:hover{color:#fff;cursor:pointer}hr{color:#000;background-color:#000;border:1px solid #000;width:40%;margin-top:18px;margin-left:auto;margin-right:auto}p{font-size:12px}"]}]}],n.ctorParameters=function(){return[]},n.propDecorators={data:[{type:o.Input}]},n}();var c=function(){function n(n){this._formBuilder=n,this.navigateTo=new o.EventEmitter}return n.prototype.ngOnInit=function(){this.loginForm=this._formBuilder.group({user:["",[s.Validators.required,s.Validators.minLength(5)]],password:["",[s.Validators.required,s.Validators.minLength(5)]],accessOn:(new Date).toISOString().substring(0,10)})},Object.defineProperty(n.prototype,"lf",{get:function(){return this.loginForm.controls},enumerable:!0,configurable:!0}),n.decorators=[{type:o.Component,args:[{selector:"lib-home-login",template:'<div main-home-container class="container-fluid">\n  <div class="d-flex flex-row flex-wrap align-items-center vh-100">\n    <div logo-container class="p-0 w-50">\n      <div class="d-flex flex-row justify-content-center align-items-center">\n        <div class="p-0">\n          <img class="img-fluid logo-img" src="assets/angular.png" />\n        </div>\n        <div class="p-0">\n          <h1 class="logo-text text-monospace text-center">\n            {{ data.title }}\n          </h1>\n        </div>\n      </div>\n    </div>\n    <div login-container class="p-0 w-50">\n      <div class="w-50 text-center m-auto">\n        <form\n          [formGroup]="loginForm"\n          (submit)="\n            loginForm.valid ? navigateTo.next(true) : navigateTo.next(false)\n          "\n          autocomplete="off"\n        >\n          <div class="form-group">\n            <div class="input-group flex-nowrap">\n              <div class="input-group-prepend">\n                <span class="input-group-text p-0">\n                  <fa-icon [icon]="[\'fa\', data.faIcons.user]"></fa-icon>\n                </span>\n              </div>\n              <input\n                input-login\n                type="email"\n                class="form-control"\n                formControlName="user"\n              />\n              <span\n                class="input-group-text p-0 check"\n                *ngIf="!lf.user.errors && (lf.user.touched || lf.user.dirty)"\n              >\n                <fa-icon icon="check"></fa-icon>\n              </span>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="input-group flex-nowrap">\n              <div class="input-group-prepend">\n                <span class="input-group-text p-0">\n                  <fa-icon [icon]="[\'fa\', data.faIcons.password]"></fa-icon>\n                </span>\n              </div>\n              <input\n                input-login\n                type="email"\n                class="form-control"\n                formControlName="password"\n              />\n              <span check class="input-group-text p-0">\n                <fa-icon icon="check"></fa-icon>\n              </span>\n            </div>\n          </div>\n          <button type="submit" class="button">Entrar</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:["[login-container],[logo-container],[main-home-container]{background-color:#cd6155}[input-login]{border-left:none;border-top:none;border-right:none;background-color:#cd6155;border-bottom:1px solid #fff;border-radius:0;color:#fff;height:35px}.button{color:#fff;border-color:#fff}.button:hover{color:#000;border-color:#000}.form-control::-webkit-input-placeholder{color:#fff}.form-control::-moz-placeholder{color:#fff}.form-control::-ms-input-placeholder{color:#fff}.card-login{box-shadow:none;background-color:#363636;width:70%;margin:0 auto}.logo-text,.logo-text>span{color:#fff}.logo-img{width:96px;height:96px}[check]{margin-left:-16px;color:#fff}@media (max-width:455px){.logo-container{margin:0 auto}}"]}]}],n.ctorParameters=function(){return[{type:s.FormBuilder}]},n.propDecorators={data:[{type:o.Input}],navigateTo:[{type:o.Output}]},n}();a.library.add(i.fas);var u=function(){function n(){}return n.decorators=[{type:o.NgModule,args:[{declarations:[l,c],imports:[e.CommonModule,r.FontAwesomeModule,t.RouterModule,s.FormsModule,s.ReactiveFormsModule],exports:[l,c]}]}],n}();n.BootstrapCustomModule=u,n.ɵa=l,n.ɵb=c,Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=ui.umd.min.js.map