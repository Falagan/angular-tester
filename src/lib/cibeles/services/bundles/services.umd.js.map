{"version":3,"file":"services.umd.js","sources":["ng://services/lib/mercurio/mercurio.service.ts","ng://services/lib/mercurio/login.service.ts","ng://services/lib/services.module.ts"],"sourcesContent":["import {Injectable, Optional} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ServicesConfig} from '../services.config.interface';\nimport {MercurioBody, MercurioRequest, MercurioResponse} from 'cibeles/models';\n\n\n@Injectable()\nexport class MercurioService<T> {\n  private httpOptions: { headers: HttpHeaders };\n  private url: string;\n\n  constructor(@Optional() config: ServicesConfig, private httpClient: HttpClient) {\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    this.url = config.servers.mercurio;\n  }\n\n  post(request: T): Observable<MercurioResponse> {\n\n    const body: MercurioBody<T> = {\n      Entrada: request,\n      Id: '',\n      Metodo: '',\n      Servicio: 'servicios',\n      Tipo: '',\n      URL: this.url\n    };\n\n    return this.httpClient.post<MercurioResponse>(this.url, body, this.httpOptions);\n  }\n\n  get(request: MercurioRequest): Observable<MercurioResponse> {\n    return this.httpClient.get<MercurioResponse>(this.url);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MercurioService} from './mercurio.service';\nimport {Observable, Subject} from 'rxjs';\nimport {MercurioResponse, LoginResponse, LoginRequest} from 'cibeles/models';\nimport {Service} from '../service.interface';\n\n@Injectable()\nexport class LoginService implements Service {\n\n  private loginSubject: Subject<any>;\n\n  constructor(private mercurioService: MercurioService<LoginRequest>) {\n    this.loginSubject = new Subject<any>();\n  }\n\n  request(request: LoginRequest) {\n    this.mercurioService.post(request).subscribe(\n      (response: MercurioResponse) => this.loginSubject.next(response.Salida as LoginResponse)\n    );\n  }\n\n  get(): Observable<LoginResponse> {\n    return this.loginSubject.asObservable();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {LoginService} from './mercurio/login.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [LoginService]\n})\nexport class ServicesModule {\n}\n"],"names":["HttpHeaders","Injectable","Optional","HttpClient","Subject","NgModule"],"mappings":";;;;;;;;;;IAAA;;;AAOA;QAKE,yBAAwB,MAAsB,EAAU,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAE5E,IAAI,CAAC,WAAW,GAAG;gBACjB,OAAO,EAAE,IAAIA,gBAAW,CAAC;oBACvB,cAAc,EAAE,mCAAmC;iBACpD,CAAC;aACH,CAAC;YAEF,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;SACpC;;;;;QAED,8BAAI;;;;QAAJ,UAAK,OAAU;;gBAEP,IAAI,GAAoB;gBAC5B,OAAO,EAAE,OAAO;gBAChB,EAAE,EAAE,EAAE;gBACN,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,EAAE;gBACR,GAAG,EAAE,IAAI,CAAC,GAAG;aACd;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAmB,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SACjF;;;;;QAED,6BAAG;;;;QAAH,UAAI,OAAwB;YAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,CAAC,CAAC;SACxD;;oBAhCFC,eAAU;;;;oDAKIC,aAAQ;oBAXfC,eAAU;;QAuClB,sBAAC;KAjCD,IAiCC;;;;;;QA/BC,sCAA8C;;;;;QAC9C,8BAAoB;;;;;QAE4B,qCAA8B;;;;;;;ACZhF;QAWE,sBAAoB,eAA8C;YAA9C,oBAAe,GAAf,eAAe,CAA+B;YAChE,IAAI,CAAC,YAAY,GAAG,IAAIC,YAAO,EAAO,CAAC;SACxC;;;;;QAED,8BAAO;;;;QAAP,UAAQ,OAAqB;YAA7B,iBAIC;YAHC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS;;;;YAC1C,UAAC,QAA0B,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,oBAAC,QAAQ,CAAC,MAAM,GAAkB,GAAA,EACzF,CAAC;SACH;;;;QAED,0BAAG;;;QAAH;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;SACzC;;oBAjBFH,eAAU;;;;oBALH,eAAe;;QAuBvB,mBAAC;KAlBD,IAkBC;;;;;;QAfC,oCAAmC;;;;;QAEvB,uCAAsD;;;;;;;ACXpE;QAGA;SAOC;;oBAPAI,aAAQ,SAAC;wBACR,YAAY,EAAE,EAAE;wBAChB,OAAO,EAAE,EAAE;wBACX,OAAO,EAAE,EAAE;wBACX,SAAS,EAAE,CAAC,YAAY,CAAC;qBAC1B;;QAED,qBAAC;KAPD;;;;;;;;;;;;;;"}