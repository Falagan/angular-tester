{"version":3,"sources":["ng://services/lib/mercurio/mercurio.service.ts","ng://services/lib/mercurio/login.service.ts","ng://services/lib/services.module.ts"],"names":["MercurioService","config","httpClient","this","httpOptions","headers","HttpHeaders","Content-Type","url","servers","mercurio","prototype","post","request","body","Entrada","Id","Metodo","Servicio","Tipo","URL","get","Injectable","Optional","HttpClient","LoginService","mercurioService","loginSubject","Subject","_this","subscribe","response","next","asObservable","ServicesModule","NgModule","args","declarations","imports","exports","providers"],"mappings":"gXAOA,IAAAA,EAAA,WAKE,SAAAA,EAAwBC,EAAgCC,GAAAC,KAAAD,WAAAA,EAEtDC,KAAKC,YAAc,CACjBC,QAAS,IAAIC,EAAAA,YAAY,CACvBC,eAAgB,uCAIpBJ,KAAKK,IAAMP,EAAOQ,QAAQC,SAoB9B,OAjBEV,EAAAW,UAAAC,KAAA,SAAKC,OAEGC,EAAwB,CAC5BC,QAASF,EACTG,GAAI,GACJC,OAAQ,GACRC,SAAU,YACVC,KAAM,GACNC,IAAKjB,KAAKK,KAGZ,OAAOL,KAAKD,WAAWU,KAAuBT,KAAKK,IAAKM,EAAMX,KAAKC,cAGrEJ,EAAAW,UAAAU,IAAA,SAAIR,GACF,OAAOV,KAAKD,WAAWmB,IAAsBlB,KAAKK,0BA/BrDc,EAAAA,+EAKcC,EAAAA,kBAXPC,EAAAA,cAuCRxB,EAjCA,GCPA,IAAAyB,EAAA,WAWE,SAAAA,EAAoBC,GAAAvB,KAAAuB,gBAAAA,EAClBvB,KAAKwB,aAAe,IAAIC,EAAAA,QAY5B,OATEH,EAAAd,UAAAE,QAAA,SAAQA,GAAR,IAAAgB,EAAA1B,KACEA,KAAKuB,gBAAgBd,KAAKC,GAASiB,WAAS,SACzCC,GAA+B,OAAAF,EAAKF,aAAaK,KAAKD,EAAe,YAI1EN,EAAAd,UAAAU,IAAA,WACE,OAAOlB,KAAKwB,aAAaM,oCAhB5BX,EAAAA,sDALOtB,KAuBRyB,EAxBA,GCAA,IAAAS,EAAA,WAGA,SAAAA,KAOA,2BAPCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,GACdC,QAAS,GACTC,QAAS,GACTC,UAAW,CAACf,OAGdS,EAVA","sourcesContent":["import {Injectable, Optional} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ServicesConfig} from '../services.config.interface';\nimport {MercurioBody, MercurioRequest, MercurioResponse} from 'cibeles/models';\n\n\n@Injectable()\nexport class MercurioService<T> {\n  private httpOptions: { headers: HttpHeaders };\n  private url: string;\n\n  constructor(@Optional() config: ServicesConfig, private httpClient: HttpClient) {\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    this.url = config.servers.mercurio;\n  }\n\n  post(request: T): Observable<MercurioResponse> {\n\n    const body: MercurioBody<T> = {\n      Entrada: request,\n      Id: '',\n      Metodo: '',\n      Servicio: 'servicios',\n      Tipo: '',\n      URL: this.url\n    };\n\n    return this.httpClient.post<MercurioResponse>(this.url, body, this.httpOptions);\n  }\n\n  get(request: MercurioRequest): Observable<MercurioResponse> {\n    return this.httpClient.get<MercurioResponse>(this.url);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MercurioService} from './mercurio.service';\nimport {Observable, Subject} from 'rxjs';\nimport {MercurioResponse, LoginResponse, LoginRequest} from 'cibeles/models';\nimport {Service} from '../service.interface';\n\n@Injectable()\nexport class LoginService implements Service {\n\n  private loginSubject: Subject<any>;\n\n  constructor(private mercurioService: MercurioService<LoginRequest>) {\n    this.loginSubject = new Subject<any>();\n  }\n\n  request(request: LoginRequest) {\n    this.mercurioService.post(request).subscribe(\n      (response: MercurioResponse) => this.loginSubject.next(response.Salida as LoginResponse)\n    );\n  }\n\n  get(): Observable<LoginResponse> {\n    return this.loginSubject.asObservable();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {LoginService} from './mercurio/login.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [LoginService]\n})\nexport class ServicesModule {\n}\n"]}